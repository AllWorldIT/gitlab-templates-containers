image: docker:latest
services:
  - docker:dind

stages:
  - build
  - test
  - release

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: /certs/client

before_script:
  - if [ -n "${GROUP_CI_REGISTRY_USER}" -a -n "${GROUP_CI_REGISTRY_PASSWORD}" ]; then
      echo "Group CI login...";
      echo "${GROUP_CI_REGISTRY_PASSWORD}" | docker login --username "${GROUP_CI_REGISTRY_USER}" --password-stdin registry.gitlab.iitsp.com/allworldit/docker;
    fi
  - echo "${CI_REGISTRY_PASSWORD}" | docker login --username "${CI_REGISTRY_USER}" --password-stdin "${CI_REGISTRY}"
  # Work out some things we may need below
  - export TIMESTAMP=$(cat .TIMESTAMP || date +%Y%m%d%H%M%S | tee .TIMESTAMP)
  - echo "TIMESTAMP ${TIMESTAMP}"
  # Setup the CI image name we'll be using
  - export CI_IMAGE="${CI_REGISTRY_IMAGE}/builds:${CI_PIPELINE_IID}"
  # If we're a branch, tag or unknown
  - echo "CI_COMMIT_BRANCH ${CI_COMMIT_BRANCH}"
  - echo "CI_COMMIT_TAG ${CI_COMMIT_TAG}"
  - if [ -n "${CI_COMMIT_BRANCH}" ]; then
      if [ "${CI_COMMIT_BRANCH}" != "master" -a "${CI_COMMIT_BRANCH}" != "main" ]; then
        REPO_PREFIX="/${CI_COMMIT_BRANCH}";
      else
        REPO_PREFIX="";
      fi;
      export CONTAINER_RELEASE_IMAGE="${CI_REGISTRY_IMAGE}${REPO_PREFIX}:latest";
      export CONTAINER_IMAGE="${CI_REGISTRY_IMAGE}${REPO_PREFIX}:${TIMESTAMP}";
      export VER=" snapshot${REPO_PREFIX} ${TIMESTAMP}";
    elif [ -n "${CI_COMMIT_TAG}" ]; then
      export IMAGE_TAG_REL=$(echo "${CI_COMMIT_TAG}" | sed -e 's/^v//');
      export IMAGE_TAG=$(echo "${IMAGE_TAG_REL}" | sed -E -e 's/-[0-9][0-9\.]*$//');
      if [ "${IMAGE_TAG_REL}" == "${IMAGE_TAG}" ]; then
        echo "ERROR - Tag is in the wrong format. It should be 'vX.Y.Z-A.B'";
        exit 1;
      fi;
      export CONTAINER_RELEASE_IMAGE="${CI_REGISTRY_IMAGE}:${IMAGE_TAG}";
      export VER=" version ${CI_COMMIT_TAG}";
    else
      echo "ERROR determining type of image";
      exit 1;
    fi


build:
  stage: build
  script:
    - docker build --pull
          --build-arg=VERSION_INFO="${CI_PROJECT_TITLE} [${CI_PROJECT_PATH_SLUG}]${VER} build ${CI_PIPELINE_IID} commit ${CI_COMMIT_SHORT_SHA} ($(date -Iseconds))"
          --tag "${CI_IMAGE}" .
    # Branch tags are required for CI
    - docker push "${CI_IMAGE}"
  artifacts:
    paths:
      - .TIMESTAMP


test:
  stage: test
  script:
    - docker pull "${CI_IMAGE}"
    - docker run -e CI=true "${CI_IMAGE}"
  artifacts:
    paths:
      - .TIMESTAMP


release:
  stage: release
  script:
    # Grab CI image
    - docker pull "${CI_IMAGE}"
    # Work out what we're pushing
    - if [ -n "${CONTAINER_IMAGE}" ]; then
        docker tag "${CI_IMAGE}" "${CONTAINER_IMAGE}";
        docker push "${CONTAINER_IMAGE}";
      fi
    - if [ -n "${CONTAINER_RELEASE_IMAGE}" ]; then
        docker tag "${CI_IMAGE}" "${CONTAINER_RELEASE_IMAGE}";
        docker push "${CONTAINER_RELEASE_IMAGE}";
      fi

